#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
#
Name     : h5py
Version  : 3.2.1
Release  : 57
URL      : https://files.pythonhosted.org/packages/ea/00/d0606cc0d6107a98f75b98367dc42917a67e3a7ec881636835f8e6987e6b/h5py-3.2.1.tar.gz
Source0  : https://files.pythonhosted.org/packages/ea/00/d0606cc0d6107a98f75b98367dc42917a67e3a7ec881636835f8e6987e6b/h5py-3.2.1.tar.gz
Summary  : Read and write HDF5 files from Python
Group    : Development/Tools
License  : GPL-2.0
Requires: cached-property
Requires: numpy
BuildRequires : Cython-python
BuildRequires : PyYAML
BuildRequires : Pygments
BuildRequires : buildreq-distutils3
BuildRequires : cached-property
BuildRequires : hdf5
BuildRequires : hdf5-dev
BuildRequires : hdf5-lib
BuildRequires : hdf5-staticdev
BuildRequires : numpy
BuildRequires : openblas
BuildRequires : pip
BuildRequires : pluggy
BuildRequires : py-python
BuildRequires : pytest
BuildRequires : python-pkgconfig
BuildRequires : python3-dev
BuildRequires : python3-staticdev
BuildRequires : sed
BuildRequires : six
BuildRequires : tox
BuildRequires : virtualenv

%description
The h5py package provides both a high- and low-level interface to the HDF5
        library from Python. The low-level interface is intended to be a complete
        wrapping of the HDF5 API, while the high-level component supports  access to
        HDF5 files, datasets and groups using established Python and NumPy concepts.
        
        A strong emphasis on automatic conversion between Python (Numpy) datatypes and
        data structures and their HDF5 equivalents vastly simplifies the process of
        reading and writing data from Python.
        
        Supports HDF5 versions 1.8.4 and higher.  On Windows, HDF5 is included with
        the installer.

%prep
%setup -q -n h5py-3.2.1
cd %{_builddir}/h5py-3.2.1

%build
unset http_proxy
unset https_proxy
unset no_proxy
export SSL_CERT_FILE=/var/cache/ca-certs/anchors/ca-certificates.crt
export LANG=C.UTF-8
export SOURCE_DATE_EPOCH=1622338066
export GCC_IGNORE_WERROR=1
export CFLAGS="$CFLAGS -fno-lto "
export FCFLAGS="$FFLAGS -fno-lto "
export FFLAGS="$FFLAGS -fno-lto "
export CXXFLAGS="$CXXFLAGS -fno-lto "
export MAKEFLAGS=%{?_smp_mflags}
if [ ! -f setup.py ]; then
printf "#!/usr/bin/env python\nfrom setuptools import setup\nsetup()" > setup.py
chmod +x setup.py
python3 setup.py build
else
python3 setup.py build
fi
%install
export MAKEFLAGS=%{?_smp_mflags}
rm -rf %{buildroot}
python3 -tt setup.py build  install --root=%{buildroot}
echo ----[ mark ]----
cat %{buildroot}/usr/lib/python3*/site-packages/*/requires.txt || :
echo ----[ mark ]----

%files
%defattr(-,root,root,-)
